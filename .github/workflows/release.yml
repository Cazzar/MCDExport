name: Release MCDExport

on:
    workflow_dispatch:
        inputs:
            version:
                description: "Version tag to create (ex: 0.1.2)"
                required: true

jobs:
    build:
        runs-on: windows-latest
        permissions:
            contents: write
        
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Install .NET
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 9.0.x

            - name: Download Dalamud
              run: |
                  Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
                  Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"

            - name: Restore Dependencies
              run: dotnet restore MCDExport.sln

            - name: Build MCDExport
              run: dotnet build MCDExport.sln --no-restore /p:Configuration=Release /p:Version=${{ github.event.inputs.version }}

            - name: Zip Release
              uses: TheDoctor0/zip-release@0.6.0
              with:
                  filename: '../../../MCDExport.zip'
                  directory: './bin/x64/Release/'
                  exclusions: 'MCDExport MCDExport/*'

            - name: Upload Release
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: true
                  artifacts: "./MCDExport.zip"
                  name: MCDExport v${{ github.event.inputs.version }}
                  tag: v${{ github.event.inputs.version }}
                  draft: false
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit: ${{ vars.GITHUB_SHA }}

            - name: Update repo.json
              run: |
                  git config --global user.name "Actions User"
                  git config --global user.email "actions@github.com"
                  git fetch origin master && git checkout master
                  $ver = '${{ github.event.inputs.version }}'
                  $path = './Resources/Templates/repo.tmpl'
                  $new_path = './repo.json'
                  $content = get-content -path $path
                  $content = $content -replace '{version}',$ver
                  set-content -Path $new_path -Value $content
                  git add repo.json
                  git commit -m "[CI] Updating versions for v${{ github.event.inputs.version }}" || true
                  git push origin master || true
