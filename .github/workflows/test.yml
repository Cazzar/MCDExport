name: Testing MCDExport

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag for testing (e.g., 0.1.2-beta1)"
        required: true

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v2
        with:
          ref: 'dev'
          fetch-depth: 0

      - name: Install .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"

      - name: Restore Dependencies
        run: dotnet restore MCDExport.sln

      - name: Build MCDExport
        run: dotnet build MCDExport.sln --no-restore /p:Configuration=Release /p:Version=${{ github.event.inputs.version }}

      - name: Zip Release
        uses: TheDoctor0/zip-release@0.6.0
        with:
          filename: '../../../../MCDExport.zip'
          directory: './MCDExport/bin/x64/Release/'
          exclusions: 'MCDExport MCDExport/*'

      - name: Create Pre-Release for Testing
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./MCDExport.zip"
          name: MCDExport (Testing) v${{ github.event.inputs.version }}
          tag: dev-v${{ github.event.inputs.version }}
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ vars.GITHUB_SHA }}

      - name: Update testing repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin master && git checkout master
          $repoJsonPath = './repo.json'
          $repoJson = Get-Content $repoJsonPath -Raw | ConvertFrom-Json
          $repoJson[0].TestingAssemblyVersion = '${{ github.event.inputs.version }}'
          $repoJson[0].DownloadLinkTesting = 'https://github.com/NanaKhide/MCDExport/releases/download/dev-v${{ github.event.inputs.version }}/MCDExport.zip'
          $repoJson | ConvertTo-Json -Depth 5 | Set-Content $repoJsonPath
          git add repo.json
          git commit -m "[CI] Updating testing version for dev-v${{ github.event.inputs.version }}" || true
          git push origin master || true
